Surface
========================

Class: BasicSurface
----------------------

`BasicSurface` is the parent class that generates surfaces between control sections.
The control sections are objects of `BasicSection`. In CST-Modeling, a surface is 
interpolated between two control sections, i.e., two 3D planar curves. 
Multiple surfaces are generated when multiple sections are provided.

The surface is constructed by linear interpolation by default, but they can be smoothed 
by spline curves. One guide curve going through leading edge points can be specified 
to construct bent surfaces.

The generated surface is like the `Swept surfaces` or `Multi-Sections Surfaces` in CATIA:

- A swept surface is generated by sweeping a section curve along an arbitrary trajectory.
- A multi-sections surface is defined by two planar sections and two guide curves. 
  You can make a multi-sections surface tangent to an adjacent surface by 
  selecting an end section that lies on the adjacent surface. 
  In this case, the guides must also be tangent to the surface.

It provides a `read_setting` function to read control files, which contains all the
layout parameters. The control file is sometimes more convenient
for optimization softwares or programs. It is also useful to provide the same layout
for different scripts.
But of course, you can just define them in your own python script.

.. code-block:: python
    :linenos:

    surface = BasicSurface(n_sec=2, name='basic-surface', nn=1001, ns=101, projection=True)
    surface.read_setting('Settings.txt')
    surface.geo()
    surface.output_tecplot(fname='basic-surface.dat', one_piece=False)

.. code-block:: text
    :linenos:

    ==========================================
    [Surf] basic-surface
    ==========================================
    ---------------------------------------------------
    Layout: LE XYZ(m),  chord(m), twist(deg), rel-thick
    ---------------------------------------------------
        0.0  0.0   0.0     5.5        3.0        0.18
        2.0  1.0   7.0     3.2        0.0        0.14


Class: OpenSurface
----------------------

`OpenSurface` is a child class of `BasicSurface`. It uses `OpenSection` objects as 
the control sections, which uses CST method for constructing the unit 2D **open curve**.

It provides a `read_setting` function to read control files, which contains all the
layout parameters and **CST coefficients**.

.. code-block:: python
    :linenos:

    surface = OpenSurface(n_sec=2, name='open-surface', nn=1001, ns=101, projection=True)
    surface.read_setting('Settings.txt')
    surface.geo()
    surface.output_tecplot(fname='open-surface.dat', one_piece=False)

.. code-block:: text
    :linenos:

    ==========================================
    [Surf] open-surface
    ==========================================
    ---------------------------------------------------
    Layout: LE XYZ(m),  chord(m), twist(deg), rel-thick
    ---------------------------------------------------
        0.0  0.0   0.0     5.5        3.0        0.18
        2.0  1.0   7.0     3.2        0.0        0.14
    ---------------------------------------------------
    CST_coefs:
    ---------------------------------------------------
    Section 1---------------
     1.0   1.0   1.0   1.0   1.0   1.0   1.0
    Section 2---------------
     1.0   1.0   1.0   1.0   1.0   1.0   1.0
    ---------------------------------------------------
    CST_refine:
    ---------------------------------------------------
    n_cst   start-index
     20      0
    Section 1---------------
     0.1   0.1
    Section 2---------------
     0.1   0.1   0.1


Class: Surface
----------------------

`Surface` is a child class of `BasicSurface`. It uses `Section` objects as 
the control sections, which uses CST method for constructing the unit 2D airfoil, 
i.e., a **closed curve**.

It also provides a `read_setting` function to read control files, which contains all the
layout parameters and **CST coefficients**. 

The following code and control file show an example of generating a 3D airfoil surface.
The surface has unit span length, unit chord length, zero twist angle and zero swept angle.
It is a 3D surface of a 2D airfoil, which can be used for meshing in ICEM CFD.

.. code-block:: python
    :linenos:

    wing = Surface(n_sec=0, name='Airfoil3D', nn=1001, ns=101, projection=True)
    wing.read_setting('Settings.txt', tail=0.1)
    wing.geo()
    wing.output_plot3d(fname='Airfoil3D-basic.grd', split=True)
    plot3d_to_igs(fname='Airfoil3D')

.. code-block:: text
    :linenos:

    ==========================================
    [Surf] Airfoil3D
    ==========================================
    ---------------------------------------------------
    Layout: LE XYZ(m),  chord(m), twist(deg), rel-thick
    ---------------------------------------------------
        0.0  0.0   0.0     1.0        0.0        0.11
    ---------------------------------------------------
    CST_coefs:
    ---------------------------------------------------
    Section 1---------------
     0.118598   0.118914   0.155731   0.136732   0.209265   0.148305   0.193591
    -0.115514  -0.134195  -0.109145  -0.253206  -0.012220  -0.118463   0.064100
    ---------------------------------------------------
    CST_refine:
    ---------------------------------------------------
    n_cst   start-index
     20      0
    Section 1---------------
     0.1   0.1   
     0.0   0.0


