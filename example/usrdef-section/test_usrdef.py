'''
Diamond wing
'''

import numpy as np

from cst_modeling.basic import BasicSection, BasicSurface



class Section(BasicSection):
    '''
    Section 3D curve generated by CST foil and base shape (upper & lower surface)
    
    ### Inputs:
    ```text
    xLE, yLE, zLE:  coordinates of the leading edge
    xx, yu, yl:     2D unit airfoil
    chord:
    thick:          maximum thickness of the section
    tail:           
    twist:          
    ```
    '''
    def __init__(self, xLE, yLE, zLE, chord, xx: np.ndarray, yu: np.ndarray, yl: np.ndarray,
               twist=0.0, tail=0.0, thick=None):

        super().__init__(thick=thick, chord=chord, twist=twist)
        
        self.xLE = xLE
        self.yLE = yLE
        self.zLE = zLE
        self.tail = tail
        
        #* 2D unit airfoil
        self.xx = xx
        self.yu = yu
        self.yl = yl

        #* 3D airfoil (generate x,y,z)
        self.section()


class Wing(BasicSurface):
    
    def __init__(self, sections: list, ns=101):
        
        super().__init__(n_sec=len(sections), name='Wing', nn=sections[0].x.shape[0], ns=ns, project=True)
        
        self.secs = sections
        
        self.layout_center()

        for i in range(self.n_sec-1):
            surf = self.section_surf(self.secs[i], self.secs[i+1], ns=self.ns)
            self.surfs.append(surf)

